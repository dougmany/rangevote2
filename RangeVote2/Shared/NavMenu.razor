@using RangeVote2.Data
@inject RangeVoteRepository _repository
@inject NavigationManager MyNavigationManager

<div class=@(collapseNavMenu ? "collapse" : null) @onclick=ToggleNavMenu>
    <h3>Vote!</h3>
    <p>This is a <a href="https://en.wikipedia.org/wiki/Score_voting">Score Voting system</a>.</p>
    <p>Similar to the Olympics, give a score from 0 to 9.9 to every trip.</p>
    <p>It is recommended to give your favorite choice a 9.9 and your lease favorite a 0.</p>

</div>
<div>

    @if (userId is not null && userId != "")
    {
    <a href="ballots?userId=@userId">Ballots</a>
    }
    else
    {
    <a href="">Ballots</a>
    }
    <br />
    <br />
    @if (voters.Count > 0)
    {
        <span>Voted so far:</span>
        <hr />
        foreach (var item in voters)
        {
            <span>@item.ElectionID: @item.Voters</span><br />
        }
    }

</div>

@code {

    List<VoteCount> voters = new List<VoteCount>();
    List<String> ballots = new List<string>();
    String userId;

    protected override async Task OnInitializedAsync()
    {
        var votersCall = await _repository.GetVotersAsync();
        voters = votersCall;

        ballots = _repository.GetBallots();

        var uriBuilder = new UriBuilder(MyNavigationManager.Uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        userId =  q["userId"] ?? "";
    }

    bool collapseNavMenu = true;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
